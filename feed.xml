<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.tmdjojo.com/</id><title>TMDJoJo's blog</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-03-06T00:38:29+08:00</updated> <author> <name>TMDJoJo</name> <uri>https://blog.tmdjojo.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.tmdjojo.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://blog.tmdjojo.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 TMDJoJo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>c/c++存对齐问题</title><link href="https://blog.tmdjojo.com/posts/data_structure_alignment/" rel="alternate" type="text/html" title="c/c++存对齐问题" /><published>2015-08-24T00:00:00+08:00</published> <updated>2022-02-25T19:32:18+08:00</updated> <id>https://blog.tmdjojo.com/posts/data_structure_alignment/</id> <content src="https://blog.tmdjojo.com/posts/data_structure_alignment/" /> <author> <name>TMDJoJo</name> </author> <category term="c/c++" /> <summary> 引言 使用手动管理内存的语言时，很多编译器的默认行为会造成困惑，甚至是某些“灵异”时间，本文对数据结构的数据对齐问题进行了整理和测试，对需要降低程序内存占用率或者平台移植有些许帮助。 结构体中的数据对齐 数据结构对齐（Data structure alignment）指将数据放在内存字长整数倍的位置上，因CPU处理内存的方式而提高系统性能。数据对齐会在数据直接填充一些空字节。 以下将通过几个实际例子来说明在结构体里是如果进行数据对齐的。 例一：基础 #include &amp;lt;stdio.h&amp;gt; struct foo{ char a_; // 1 byte int b_; // 4 byte short c_; // 2 byte }; int main(int argc, char** argv){ struct foo f; printf("size... </summary> </entry> <entry><title>shell之if else判断总结</title><link href="https://blog.tmdjojo.com/posts/shell-ifelse/" rel="alternate" type="text/html" title="shell之if else判断总结" /><published>2015-03-24T00:00:00+08:00</published> <updated>2022-02-25T19:32:18+08:00</updated> <id>https://blog.tmdjojo.com/posts/shell-ifelse/</id> <content src="https://blog.tmdjojo.com/posts/shell-ifelse/" /> <author> <name>TMDJoJo</name> </author> <category term="linux" /> <summary> 条件语句 条件语句和是编程语言中的必要要素，shell中使用和使用常见编程语言中的if/else关键字提供双路决策，if/elif/../else提供多路决策。 语法： if expression then statements elif expression then statements ... else statements fi #或者expression和then写在同一行的方式 if expression;then statements elif expression;then statements ... else statements fi 逻辑表达式 shell中常用于判断的表达式有三种： test命令 [ ]命令 [[ ]]关键字 此外还有let,(()) eg. [root@localhost ~]# test 1 = ... </summary> </entry> </feed>
